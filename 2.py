#Problem 2
'''
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
'''

def sum_of_even_Fibonacci_numbers(first_number, second_number, max_value):
    """
        Find the sum of even Fibonacci numbers
        Args: first and second numbers in Fibonacci sequence, and amx value
        Result: the sum of numbers under the max value
    """
    print(second_number)
    if second_number > max_value: return is_even(first_number)
    else: return is_even(first_number) + sum_of_even_Fibonacci_numbers(second_number, first_number + second_number, max_value)

def is_even(number):
    """
    Return this number if it is even
    Arg: integer number
    Result: this number or zero
    """
    if number % 2 == 0:
        return 0
    else: return number 



print(sum_of_even_Fibonacci_numbers(1, 2, 4000000))
