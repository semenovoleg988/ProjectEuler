# Problem 2
# Even Fibonacci numbers
"""Description(https://projecteuler.net/problem=2).
    
    Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    find the sum of the even-valued terms."""


def sum_of_even_Fibonacci_numbers(first_number: int, second_number: int, max_value: int) -> int:
    """Find the sum of even Fibonacci numbers.
        
        Args: first and second numbers in Fibonacci sequence, and max value
        Result: the sum of numbers under the max value"""
    if second_number > max_value:
        return is_even(first_number)
    else:
        return is_even(first_number) + \
        sum_of_even_Fibonacci_numbers(second_number, first_number + second_number, max_value)


def is_even(number: int) -> int:
    """Return this number if it is even or zero otherwise."""
    return number if number % 2 == 0 else 0


if __name__ == "__main__":
    print(sum_of_even_Fibonacci_numbers(1, 2, 4000000))
