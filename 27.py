# Problem 29
# Distinct powers
"""Description(https://projecteuler.net/problem=29).

    Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

    2^2=4, 2^3=8, 2^4=16, 2^5=32
    3^2=9, 3^3=27, 3^4=81, 3^5=243
    4^2=16, 4^3=64, 4^4=256, 4^5=1024
    5^2=25, 5^3=125, 5^4=625, 5^5=3125
    If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

    4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

    How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?"""

def distinct_powers(min_a: int, max_a: int, min_b: int, max_b: int) -> int:
    """ Calculate number of distinct powers b of a"""
    distinct = (max_a - min_a) * (max_b - min_b)
    for a in range(min_a, max_a + 1):
        while True:
            n = 2
            if type(pow(a, 1/n)) == int:
                for b in range(min_b, max_b + 1):
                    print(a, "^", b, "=", pow(a, b), sep="", end="\t")
                print()

    print("Number of distinct powers =", distinct)

def power_list(a:list, b:list)->None:
    """ Calculate a in power of b"""
    for x in a:
        for y in b:
            print(x, "^", y, "=", pow(x, y), sep="", end="\t")
        print()

power_list([2,4,8,16,32,64], [2,3,4,5])
